name: Auto Merge PRs from code owners

on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

permissions:
    contents: read
    pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5

    - name: Install requests
      run: pip install requests

    - name: Conditional Auto Merge PR
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        EVENT: ${{ toJson(github.event) }}
      shell: python
      run: |
        import json
        import os
        import requests
        import sys

        ALLOWED_AUTHORS = ["lordmauve"]

        github_event = json.loads(os.environ['EVENT'])
        github_token = os.environ["GITHUB_TOKEN"]

        print(json.dumps(github_event, indent=2))

        if github_event.get("pull_request") is None:
            print("Not a pull request run.")
            sys.exit()

        pull_number = github_event["pull_request"]["number"]
        pr_author = github_event["pull_request"]["user"]["login"]

        if pr_author not in ALLOWED_AUTHORS:
            print(f"PR author {pr_author} is not in the allowed list.")
            sys.exit()

        repo = github_event['repository']['full_name']

        # Merge the PR if the author is allowed
        api_url = f"https://api.github.com/repos/{repo}/pulls/{pull_number}/merge"
        headers = {
          "Authorization": f"Bearer {github_token}",
          "Accept": "application/vnd.github.v3+json"
        }
        data = {
          "merge_method": "merge",
          "sha": github_event['workflow_run']['head_commit']['id']
        }
        response = requests.put(api_url, headers=headers, json=data)

        if response.status_code == 200:
            print("Pull request merged successfully.")
        else:
            print(f"Failed to merge pull request: {response.content}")
            sys.exit(1)
