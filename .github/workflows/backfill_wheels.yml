name: Backfill wheels

on:
  schedule:
    # Run at 06:00 on the 19th of the month
    - cron: '0 6 19 * *'
  workflow_dispatch:
  push:
    branches:
      - backfill-wheels

env:
  PACKAGE: wasabi-geom

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        package_version: ['2.1.1']
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel twine

      - name: Set up QEMU in order to build non-native wheels on Linux
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Download sdist from PyPI
        run: |
          import json
          import urllib.request

          PACKAGE = '${{ env.PACKAGE }}'
          VERSION = '${{ matrix.package_version }}'

          package_info_url = f"https://pypi.org/pypi/{PACKAGE}/{VERSION}/json"

          with urllib.request.urlopen(package_info_url) as response:
              package_info = json.loads(response.read().decode())

          for url in package_info["urls"]:
              if url["packagetype"] == "sdist":
                  sdist_url = url["url"]
                  break
          else:
              raise ValueError("sdist not found for the specified version.")

          sdist_filename = sdist_url.split('/')[-1]
          urllib.request.urlretrieve(sdist_url, sdist_filename)
        shell: python
      - name: Build wheel
        run: python -m cibuildwheel --output-dir wheelhouse ${{ env.PACKAGE }}-${{ matrix.package_version }}.tar.gz
        env:
          CIBW_BUILD_VERBOSITY: 0
          CIBW_ARCHS_LINUX: auto aarch64
      - name: Upload packages with twine
        run: twine upload --skip-existing wheelhouse/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
